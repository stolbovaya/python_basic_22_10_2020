"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class IntError(Exception):
    def __init__(self, txt):
        self.txt = txt


def to_int(in_str: str):
    try:
        return int(in_str)
    except ValueError:
        raise IntError('')


list_int = []

print("Для выхода нажмите Enter без ввода значения")
while True:
    element_str = input("Ведите целое число \n>>>")
    if element_str == '':
        break
    try:
        list_int.append(to_int(element_str))
    except IntError:
        print(f'Ошибка! Введенный элемент не является числом.')

print(list_int)
